{
  "id": "http://edoc-schema.kzn.ru/geo/geojson",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "GeoJSON Object",
  "type": "object",
  "description": "This object represents a geometry, feature, or collection of features.",
  "additionalProperties": true,
  "required": ["type"],

  "properties": {
    "type": {
      "title": "Type",
      "type": "string",
      "description": "The type of GeoJSON object.",
      "enum": [
        "Point",
        "MultiPoint",
        "LineString",
        "MultiLineString",
        "Polygon",
        "MultiPolygon",
        "GeometryCollection",
        "Feature",
        "FeatureCollection"
      ]
    },

    "crs": {
      "title": "Coordinate Reference System (CRS)",
      "description": "The coordinate reference system (CRS) of a GeoJSON object is determined by its `crs` member (referred to as the CRS object below). If an object has no crs member, then its parent or grandparent object's crs member may be acquired. If no crs member can be so acquired, the default CRS shall apply to the GeoJSON object.\n\n* The default CRS is a geographic coordinate reference system, using the WGS84 datum, and with longitude and latitude units of decimal degrees.\n\n* The value of a member named `crs` must be a JSON object (referred to as the CRS object below) or JSON null. If the value of CRS is null, no CRS can be assumed.\n\n* The crs member should be on the top-level GeoJSON object in a hierarchy (in feature collection, feature, geometry order) and should not be repeated or overridden on children or grandchildren of the object.\n\n* A non-null CRS object has two mandatory members: `type` and `properties`.\n\n* The value of the type member must be a string, indicating the type of CRS object.\n\n* The value of the properties member must be an object.\n\n* CRS shall not change coordinate ordering.",

      "oneOf": [
        { "type": "null" },
        {
          "type": "object",
          "required": ["type", "properties"],
          "properties": {
            "type": {
              "title": "CRS Type",
              "type": "string",
              "description": "The value of the type member must be a string, indicating the type of CRS object.",
              "minLength": 1
            },
            "properties": {
              "title": "CRS Properties",
              "type": "object"
            }
          }
        }
      ],

      "not": {
        "anyOf": [

          {
            "properties": {
              "type": { "enum": ["name"] },
              "properties": {
                "not": {
                  "required": ["name"],
                  "properties": {
                    "name": {
                      "type": "string",
                      "minLength": 1
                    }
                  }
                }
              }
            }
          },

          {
            "properties": {
              "type": { "enum": ["link"] },
              "properties": {
                "not": {
                  "title": "Link Object",
                  "type": "object",
                  "required": ["href"],
                  "properties": {

                    "href": {
                      "title": "href",
                      "type": "string",
                      "description": "The value of the required `href` member must be a dereferenceable URI.",
                      "format": "uri"
                    },

                    "type": {
                      "title": "Link Object Type",
                      "type": "string",
                      "description": "The value of the optional `type` member must be a string that hints at the format used to represent CRS parameters at the provided URI. Suggested values are: `proj4`, `ogcwkt`, `esriwkt`, but others can be used."
                    }

                  }
                }
              }
            }
          }

        ]
      }

    },

    "bbox": {
      "title": "Bounding Box",
      "type": "array",
      "description": "To include information on the coordinate range for geometries, features, or feature collections, a GeoJSON object may have a member named `bbox`. The value of the bbox member must be a 2*n array where n is the number of dimensions represented in the contained geometries, with the lowest values for all axes followed by the highest values. The axes order of a bbox follows the axes order of geometries. In addition, the coordinate reference system for the bbox is assumed to match the coordinate reference system of the GeoJSON object of which it is a member.",
      "minItems": 4,
      "items": {
        "type": "number"
      }
    }

  },

  "oneOf": [

    {
      "title": "Point",
      "description": "For type `Point`, the `coordinates` member must be a single position.",
      "required": ["coordinates"],
      "properties": {
        "type": { "enum": ["Point"] },
        "coordinates": {
          "allOf": [
            { "$ref": "http://edoc-schema.kzn.ru/geo/coordinates" },
            { "$ref": "http://edoc-schema.kzn.ru/geo/position" }
          ]
        }
      },
      "allOf": [{ "$ref": "http://edoc-schema.kzn.ru/geo/geometry" }]
    },

    {
      "title": "Multi Point Geometry",
      "description": "For type `MultiPoint`, the `coordinates` member must be an array of positions.",
      "required": ["coordinates"],
      "properties": {
        "type": { "enum": ["MultiPoint"] },
        "coordinates": {
          "allOf": [
            { "$ref": "http://edoc-schema.kzn.ru/geo/coordinates" },
            {
              "items": { "$ref": "http://edoc-schema.kzn.ru/geo/position" }
            }
          ]
        }
      },
      "allOf": [{ "$ref": "http://edoc-schema.kzn.ru/geo/geometry" }]
    },

    {
      "title": "Line String",
      "description": "For type `LineString`, the `coordinates` member must be an array of two or more positions.\n\nA LinearRing is closed LineString with 4 or more positions. The first and last positions are equivalent (they represent equivalent points). Though a LinearRing is not explicitly represented as a GeoJSON geometry type, it is referred to in the Polygon geometry type definition.",
      "required": ["coordinates"],
      "properties": {
        "type": { "enum": ["LineString"] },
        "coordinates": { "$ref": "http://edoc-schema.kzn.ru/geo/lineStringCoordinates" }
      },
      "allOf": [{ "$ref": "http://edoc-schema.kzn.ru/geo/geometry" }]
    },

    {
      "title": "MultiLineString",
      "description": "For type `MultiLineString`, the `coordinates` member must be an array of LineString coordinate arrays.",
      "required": ["coordinates"],
      "properties": {
        "type": { "enum": ["MultiLineString"] },
        "coordinates": {
          "allOf": [
            { "$ref": "http://edoc-schema.kzn.ru/geo/coordinates" },
            {
              "items": { "$ref": "http://edoc-schema.kzn.ru/geo/lineStringCoordinates" }
            }
          ]
        }
      },
      "allOf": [{ "$ref": "http://edoc-schema.kzn.ru/geo/geometry" }]
    },

    {
      "title": "Polygon",
      "description": "For type `Polygon`, the `coordinates` member must be an array of LinearRing coordinate arrays. For Polygons with multiple rings, the first must be the exterior ring and any others must be interior rings or holes.",
      "required": ["coordinates"],
      "properties": {
        "type": { "enum": ["Polygon"] },
        "coordinates": { "$ref": "http://edoc-schema.kzn.ru/geo/polygonCoordinates" }
      },
      "allOf": [{ "$ref": "http://edoc-schema.kzn.ru/geo/geometry" }]
    },

    {
      "title": "Multi-Polygon Geometry",
      "description": "For type `MultiPolygon`, the `coordinates` member must be an array of Polygon coordinate arrays.",
      "required": ["coordinates"],
      "properties": {
        "type": { "enum": ["MultiPolygon"] },
        "coordinates": {
          "allOf": [
            { "$ref": "http://edoc-schema.kzn.ru/geo/coordinates" },
            {
              "items": { "$ref": "http://edoc-schema.kzn.ru/geo/polygonCoordinates" }
            }
          ]
        }
      },
      "allOf": [{ "$ref": "http://edoc-schema.kzn.ru/geo/geometry" }]
    },

    {
      "title": "Geometry Collection",
      "description": "A GeoJSON object with type `GeometryCollection` is a geometry object which represents a collection of geometry objects.\n\nA geometry collection must have a member with the name `geometries`. The value corresponding to `geometries` is an array. Each element in this array is a GeoJSON geometry object.",
      "required": ["geometries"],
      "properties": {
        "type": { "enum": ["GeometryCollection"] },
        "geometries": {
          "title": "Geometries",
          "type": "array",
          "items": { "$ref": "http://edoc-schema.kzn.ru/geo/geometry" }
        }
      },
      "allOf": [{ "$ref": "http://edoc-schema.kzn.ru/geo/geometry" }]
    },

    { "$ref": "http://edoc-schema.kzn.ru/geo/feature" },

    {
      "title": "Feature Collection",
      "description": "A GeoJSON object with the type `FeatureCollection` is a feature collection object.\n\nAn object of type `FeatureCollection` must have a member with the name `features`. The value corresponding to `features` is an array. Each element in the array is a feature object as defined above.",
      "required": ["features"],
      "properties": {
        "type": { "enum": ["FeatureCollection"] },
        "features": {
          "title": "Features",
          "type": "array",
          "items": { "$ref": "http://edoc-schema.kzn.ru/geo/feature" }
        }
      }
    }

  ]

}
